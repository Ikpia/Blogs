syntax = "proto3";

package blogs.blogs;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "blogs/blogs/params.proto";
import "blogs/blogs/title.proto";
import "blogs/blogs/full_post.proto";
import "blogs/blogs/comment.proto";

option go_package = "blogs/x/blogs/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/blogs/blogs/params";
  
  }
  
  // Queries a list of ShowPost items.
  rpc ShowPost (QueryShowPostRequest) returns (QueryShowPostResponse) {
    option (google.api.http).get = "/blogs/blogs/show_post/{id}";
  
  }
  
  // Queries a list of ListPost items.
  rpc ListPost (QueryListPostRequest) returns (QueryListPostResponse) {
    option (google.api.http).get = "/blogs/blogs/list_post";
  
  }
  
  // Queries a list of ListComment items.
  rpc ListComment (QueryListCommentRequest) returns (QueryListCommentResponse) {
    option (google.api.http).get = "/blogs/blogs/list_comment/{id}";
  
  }
  
  
  // Queries a list of ShowingPost items.
  rpc ShowingPost (QueryShowingPostRequest) returns (QueryShowingPostResponse) {
    option (google.api.http).get = "/blogs/blogs/showing_post/{id}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryShowPostRequest {
  uint64 id = 1;
}

message QueryShowPostResponse {
  Title title = 1 [(gogoproto.nullable) = false];
  Comment comment = 2 [(gogoproto.nullable) = false];
}

message QueryListPostRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListPostResponse {
  Title                                  title      = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryListCommentRequest {
  uint64 id = 1;
}

message QueryListCommentResponse {
  Comment comment = 1 [(gogoproto.nullable) = false];
}

message QueryShowingPostRequest {
  uint64 id = 1;
}

message QueryShowingPostResponse {
  FullPost fullpost = 1 [(gogoproto.nullable) = false];
}

